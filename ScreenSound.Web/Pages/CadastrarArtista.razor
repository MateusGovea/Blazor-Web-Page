@page "/CadastrarArtista"
@inject ArtistaAPI artistaAPI
@inject NavigationManager navigationManager

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Cadastro do Artista</MudText>

    <MudForm>

        <MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista"
                    Variant="Variant.Outlined"
                    @bind-Value="nome"
                    Required="true"
                    RequiredError="Campo obrigatório." />

        <MudTextField Class="mt-4" T="string" Placeholder="Biografia do artista"
                    Variant="Variant.Outlined"
                    @bind-Value="biografia"
                    Lines="4"
                    Required="true"
                    RequiredError="Campo obrigatório." />

        <div class="align-center justify-space-between mt-3">
            <MudImage Class="mt-4" src="@fileImage" />
            <MudFileUpload T="IBrowserFile" Accept=".jpeg" FilesChanged="UploadFile">
                <ActivatorContent>
                    <MudButton HtmlTag="label"
                                Variant="Variant.Filled"
                                Color="Color.Primary"
                                StartIcon="@Icons.Material.Filled.PhotoCamera">
                                Foto de Perfil
                    </MudButton>
                </ActivatorContent>
            </MudFileUpload>
        </div>

        <div class="align-center justify-space-between mt-3">


            <MudStack Justify="@_justify" Row="true">

                <MudButton Variant="Variant.Filled"
                            @onclick="Voltar"
                            Color="Color.Secondary">
                            Voltar
                </MudButton>

                <MudButton Variant="Variant.Filled"
                            @onclick="Cadastrar"
                            Color="Color.Primary">
                            Cadastrar
                </MudButton>

            </MudStack>
        </div>

    </MudForm>
</MudPaper>

@code 
{
    Justify _justify = Justify.FlexEnd;

    private string? nome;
    private string? biografia;

    private string? fileImage;

    private async Task Cadastrar()
    {
        var request = new ArtistaRequest(nome!, biografia!);
        await artistaAPI.AddArtistaAsync(request);
        navigationManager.NavigateTo("/Artistas");
    }

    private async Task UploadFile(IBrowserFile file)
    {
        long maxFileSize = 1024 * 1024 * 15; // 15 MB
        var format = "image/jpeg"; // Assuming JPEG format
        var resizedImage = await file.RequestImageFileAsync(format, 200, 200); // Resizing to 200x200 pixels

        using var fileStream = resizedImage.OpenReadStream(); // Open the file stream
        using var memoryStream = new MemoryStream();         // Create a memory stream to hold the image data
        await fileStream.CopyToAsync(memoryStream);         // Copy the file stream to the memory stream

        fileImage = $"data:{format};base64,{Convert.ToBase64String(memoryStream.ToArray())}"; // Convert to base64 string
    }

    private void Voltar()
    {
        navigationManager.NavigateTo("/Artistas");
    }
}
